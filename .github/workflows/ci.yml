# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI

on:
  push:
    # Use ["main", "master"] for CI only on the default branch.
    # Use ["**"] for CI on all branches.
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]

permissions:
  contents: read

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Checkout (official GitHub action)
        uses: actions/checkout@v4
        with:
          # Important for versioning plugins:
          fetch-depth: 0

      - name: Install uv (official Astral action)
        uses: astral-sh/setup-uv@v5
        with:
          # Update this as needed:
          version: "0.8.13"
          enable-cache: false
          python-version: ${{ matrix.python-version }}

      - name: Set up Python (using uv)
        run: uv python install

      - name: Install all dependencies
        run: uv sync --all-extras

      - name: Run linting
        run: make lint

      - name: Check the README.md examples
        run: make check_readme

  tests:
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.10", "3.11", "3.12", "3.13", "3.14"]

    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Checkout (official GitHub action)
        uses: actions/checkout@v4
        with:
          # Important for versioning plugins:
          fetch-depth: 0

      - name: Install uv (official Astral action)
        uses: astral-sh/setup-uv@v5
        with:
          # Update this as needed:
          version: "0.8.13"
          enable-cache: false
          python-version: ${{ matrix.python-version }}

      - name: Set up Python (using uv)
        run: uv python install

      - name: Run tests
        run: make test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
        if: ${{ matrix.python-version == '3.11' }}
